server {
    listen 443 ssl;
	http2 on;
    server_name 192.168.170.129;
	ssl_certificate /etc/nginx/conf.d/certificate.crt;
    ssl_certificate_key /etc/nginx/conf.d/private.key;


    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ /index.html;

        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Client-ID,X-API-Token' always;
        add_header 'Service-Worker-Allowed' '/' always;
    }

    location /compute {
        proxy_pass http://192.168.170.129:10000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Client-ID $http_x_client_id;
        proxy_set_header X-API-Token $http_x_api_token;

        # CORS headers for compute endpoint
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Client-ID,X-API-Token' always;
    }
}